name: Actions ðŸ˜Ž

on: [push, pull_request, workflow_dispatch]

jobs:
  buildWithLinux:
     name: Build for ${{ matrix.targetPlatform }}
    #  needs: testAllModes  # buildForAllSupportedPlatforms depends on testAllModes
     runs-on: ubuntu-latest
     strategy:
       fail-fast: false
       matrix:
         targetPlatform:
           - Android
     outputs:
       buildVersion: ${{ steps.buildStep.outputs.buildVersion }}
     steps:
       - name: Free Disk Space for Android
         if: matrix.targetPlatform == 'Android'
         run: |
           df -h
           sudo swapoff -a
           sudo rm -f /swapfile
           sudo rm -rf /usr/share/dotnet
           sudo rm -rf /opt/ghc
           sudo rm -rf "/usr/local/share/boost"
           sudo rm -rf "$AGENT_TOOLSDIRECTORY"
           df -h
       - name: Checkout Repository
         uses: actions/checkout@v3
         with:
           fetch-depth: 0
       - name: Create LFS file list
         run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
       - name: Restore LFS cache
         uses: actions/cache@v3
         id: lfs-cache
         with:
           path: .git/lfs
           key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
       - name: Git LFS Pull
         run: |
           git lfs pull
           git add .
           git reset --hard
       - uses: actions/cache@v3
         with:
           path: Library
           key: Library-build-${{ matrix.targetPlatform }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
           restore-keys: |
             Library-build-${{ matrix.targetPlatform }}-
             Library-build-
       - uses: game-ci/unity-test-runner@v4
         id: tests
         env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
         with:
          projectPath: ${{ matrix.projectPath }}
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.testMode }} Test Results
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*'
    










             
