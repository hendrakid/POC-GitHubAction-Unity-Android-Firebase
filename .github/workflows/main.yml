name: Test Runner

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the 'main' branch
  workflow_dispatch:

jobs:
  testAllModes:
    name: Test in ${{ matrix.testMode }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        testMode:
          - playmode
          # - editmode
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: actions/cache@v3
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}
          restore-keys: |
            Library-
      - uses: game-ci/unity-test-runner@v4
        id: tests
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.testMode }} Test Results
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*'
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Test results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.artifactsPath }}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Coverage results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.coveragePath }}










          

############# TEMPLATE #############

  # Build-Addressable:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Run command Build-Addressable
  #       run: echo "Build-Addressable Worker"
        
  # Upload-CDN:
  #   runs-on: ubuntu-latest
  #   needs: Build-Addressable  # Upload-CDN depends on Build-Addressable

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Run command Upload-CDN
  #       run: echo "Upload-CDN Worker"


  # Build-Android:
  #   runs-on: ubuntu-latest
  #   needs: Build-Addressable  # Build-Android depends on Build-Addressable

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Run command Build-Android
  #       run: echo "Build-Android worker"

  # Upload-Symbol-Zip:
  #   runs-on: ubuntu-latest
  #   needs: [Build-Android]  # Upload-Symbol-Zip depends on Build-Android

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Run command Upload-Symbol-Zip
  #       run: echo "Upload-Symbol-Zip worker"

  # Publish-Playstore:
  #   runs-on: ubuntu-latest
  #   needs: [Build-Android]  # Publish-Playstore depends on Build-Android

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Run command Publish-Playstore
  #       run: echo "Publish-Playstore worker"
