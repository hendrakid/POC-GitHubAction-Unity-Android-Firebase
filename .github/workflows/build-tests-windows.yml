name: Builds - Windows

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  buildForAllPlatformsWindows:
    name: ${{ matrix.targetPlatform }} on ${{ matrix.unityVersion }}
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - POC-GitHubAction-Unity-Android-Firebase-GooglePlay
        unityVersion:
          - 2022.3.51f1
        targetPlatform:
          - Android # Build an Android APK.

    steps:
      ###########################
      #   Set Git Long Paths    #
      ###########################
      - name: Enable Git Long Paths
        run: git config --global core.longpaths true

      ###########################
      #       Clone Repo        #
      ###########################
      - name: Clone Repository to Short Path
        run: |
          mkdir C:\short-repo
          git clone https://github.com/${{ github.repository }} C:\short-repo
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      ###########################
      # Change Directory to Repo
      ###########################
      - name: Change to Repository Directory
        working-directory: C:\short-repo

      ###########################
      #         Cache           #
      ###########################
      - uses: actions/cache@v4
        with:
          path: C:\short-repo\${{ matrix.projectPath }}\Library
          key: Library-${{ matrix.projectPath }}-windows-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-windows-
            Library-

      ###########################
      #  Set Scripting Backend  #
      ###########################
      - name: Set Scripting Backend to IL2CPP
        run: |
          Move-Item -Path "C:\short-repo\${{ matrix.projectPath }}\ProjectSettings\ProjectSettingsIl2cpp.asset" -Destination "C:\short-repo\${{ matrix.projectPath }}\ProjectSettings\ProjectSettings.asset" -Force

      ###########################
      #         Build           #
      ###########################
      - name: Build
        uses: game-ci/unity-builder@v2
        id: build-1
        continue-on-error: true
        timeout-minutes: 30
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          projectPath: C:\short-repo\${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          buildName: 'GameCI Test Build'
          customParameters: -profile SomeProfile -someBoolean -someValue exampleValue
          allowDirtyBuild: true

      - name: Sleep for Retry
        if: ${{ steps.build-1.outcome == 'failure' }}
        run: Start-Sleep -s 120

      - name: Build Retry 1
        uses: game-ci/unity-builder@v2
        id: build-2
        continue-on-error: true
        timeout-minutes: 30
        if: steps.build-1.outcome == 'failure'
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          projectPath: C:\short-repo\${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          buildName: 'GameCI Test Build'
          customParameters: -profile SomeProfile -someBoolean -someValue exampleValue
          allowDirtyBuild: true

      - name: Sleep for Retry
        if: ${{ steps.build-1.outcome == 'failure' && steps.build-2.outcome == 'failure' }}
        run: Start-Sleep -s 240

      - name: Build Retry 2
        uses: game-ci/unity-builder@v2
        id: build-3
        timeout-minutes: 30
        if: ${{ steps.build-1.outcome == 'failure' && steps.build-2.outcome == 'failure' }}
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          projectPath: C:\short-repo\${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          buildName: 'GameCI Test Build'
          customParameters: -profile SomeProfile -someBoolean -someValue exampleValue
          allowDirtyBuild: true

      ###########################
      #        Upload           #
      ###########################
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Build ${{ matrix.targetPlatform }} on Windows (${{ matrix.unityVersion }})
          path: build
          retention-days: 14
